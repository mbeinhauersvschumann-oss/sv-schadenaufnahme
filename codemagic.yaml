workflows:
  ios-internal:
    name: iOS Internal

    integrations:
      app_store_connect: asc

    environment:
      groups:
        - Schumann
      ios_signing:
        distribution_type: app_store
        bundle_identifier: de.svschumann.schadenaufnahme
      xcode: latest
      node: 20

    scripts:
      # 1) Web-Build
      - npm ci
      - npm run build

      # 2) Capacitor iOS sync (kein add, kein rm -rf)
      - npx cap sync ios

      # 3) Guard: Podfile vorhanden
      - '[ -f ios/App/Podfile ] || { echo "Podfile fehlt in ios/App"; ls -la ios/App; exit 1; }'

      # 4) CocoaPods
      - cd ios/App && pod install --repo-update && cd ../..

      # 5) Info.plist-Keys + Buildnummer setzen
      - |
        PLIST="ios/App/App/Info.plist"
        # Fotobibliothek (LESEN)
        /usr/libexec/PlistBuddy -c "Add :NSPhotoLibraryUsageDescription string 'Zugriff auf Fotomediathek zum Auswählen von Schadensbildern.'" "$PLIST" || \
        /usr/libexec/PlistBuddy -c "Set :NSPhotoLibraryUsageDescription 'Zugriff auf Fotomediathek zum Auswählen von Schadensbildern.' " "$PLIST"
        # Fotobibliothek (SCHREIBEN) – nur falls ihr dorthin speichert
        /usr/libexec/PlistBuddy -c "Add :NSPhotoLibraryAddUsageDescription string 'Bilder in die Fotomediathek speichern (optional).'" "$PLIST" || \
        /usr/libexec/PlistBuddy -c "Set :NSPhotoLibraryAddUsageDescription 'Bilder in die Fotomediathek speichern (optional).'" "$PLIST"
        # Kamera
        /usr/libexec/PlistBuddy -c "Add :NSCameraUsageDescription string 'Kamerazugriff für Schadenfotos.'" "$PLIST" || \
        /usr/libexec/PlistBuddy -c "Set :NSCameraUsageDescription 'Kamerazugriff für Schadenfotos.'" "$PLIST"

        # Eindeutige Buildnummer
        BN="${BUILD_NUMBER:-${CM_BUILD_ID:-$(date +%Y%m%d%H%M)}}"
        /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $BN" "$PLIST"

      # 6) Signieren & Bauen (kein 'cap open ios' im CI)
      - xcode-project use-profiles
      - xcode-project build-ipa --workspace "ios/App/App.xcworkspace" --scheme "App"

    artifacts:
      - build/ios/ipa/*.ipa

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
